# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = check_endian$(EXEEXT) check_version$(EXEEXT) \
	check_init$(EXEEXT) check_init2$(EXEEXT) \
	check_geom_aux$(EXEEXT) check_geometry_cols$(EXEEXT) \
	check_create$(EXEEXT) check_bufovflw$(EXEEXT) \
	check_fdo1$(EXEEXT) check_fdo2$(EXEEXT) check_fdo3$(EXEEXT) \
	check_fdo_bufovflw$(EXEEXT) check_md5$(EXEEXT) \
	check_dbf_load$(EXEEXT) check_shp_load$(EXEEXT) \
	check_shp_load_3d$(EXEEXT) shape_cp1252$(EXEEXT) \
	shape_primitives$(EXEEXT) shape_utf8_1$(EXEEXT) \
	shape_utf8_1ex$(EXEEXT) shape_utf8_2$(EXEEXT) \
	shape_3d$(EXEEXT) check_xls_load$(EXEEXT) \
	check_math_funcs$(EXEEXT) check_gaia_util$(EXEEXT) \
	check_gaia_utf8$(EXEEXT) check_extension$(EXEEXT) \
	check_recover_geom$(EXEEXT) check_sql_stmt$(EXEEXT) \
	check_multithread$(EXEEXT) check_virtualtable1$(EXEEXT) \
	check_virtualtable2$(EXEEXT) check_virtualtable3$(EXEEXT) \
	check_virtualtable4$(EXEEXT) check_virtualtable5$(EXEEXT) \
	check_virtualtable6$(EXEEXT) check_virtual_ovflw$(EXEEXT) \
	check_mbrcache$(EXEEXT) check_spatialindex$(EXEEXT) \
	check_exif$(EXEEXT) check_exif2$(EXEEXT) \
	check_relations_fncts$(EXEEXT) \
	check_extra_relations_fncts$(EXEEXT) \
	check_geoscvt_fncts$(EXEEXT) check_libxml2$(EXEEXT) \
	check_styling$(EXEEXT) check_virtualxpath$(EXEEXT) \
	check_virtualbbox$(EXEEXT) check_wfsin$(EXEEXT) \
	check_dxf$(EXEEXT) check_metacatalog$(EXEEXT) $(am__EXEEXT_1)
@ENABLE_GEOPACKAGE_TRUE@am__append_1 = \
@ENABLE_GEOPACKAGE_TRUE@		check_createBaseTables \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgCreateTilesTable \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgCreateTilesTableMissingSRID \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgCreateTilesZoomLevel \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgInsertEpsgSRID \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgCreateFeaturesTable \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkg_base_core_container_data_file_format_application_id \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkg_base_core_spatial_ref_sys_data_table_def \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkg_base_core_spatial_ref_sys_data_values_default \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkg_base_core_contents_data_table_def \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkg_opt_extension_mechanism_extensions_data_table_def \
@ENABLE_GEOPACKAGE_TRUE@		check_add_tile_triggers \
@ENABLE_GEOPACKAGE_TRUE@		check_add_tile_triggers_bad_table_name \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_row \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_row_bad_geopackage \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_row_bad_geopackage2 \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_zoom \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_zoom_extension_load \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_zoom_bad_geopackage \
@ENABLE_GEOPACKAGE_TRUE@		check_get_normal_zoom_bad_geopackage2 \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgGetImageFormat \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgGetImageFormat_nonimage \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgGetImageFormat_nonblob \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgGetImageFormat_png \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgGetImageFormat_tiff \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgGetImageFormat_webp \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgConvert \
@ENABLE_GEOPACKAGE_TRUE@		check_gpkgVirtual

subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@ENABLE_GEOPACKAGE_TRUE@am__EXEEXT_1 =  \
@ENABLE_GEOPACKAGE_TRUE@	check_createBaseTables$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgCreateTilesTable$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgCreateTilesTableMissingSRID$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgCreateTilesZoomLevel$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgInsertEpsgSRID$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgCreateFeaturesTable$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkg_base_core_container_data_file_format_application_id$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkg_base_core_spatial_ref_sys_data_table_def$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkg_base_core_spatial_ref_sys_data_values_default$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkg_base_core_contents_data_table_def$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkg_opt_extension_mechanism_extensions_data_table_def$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_add_tile_triggers$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_add_tile_triggers_bad_table_name$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_row$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_row_bad_geopackage$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_row_bad_geopackage2$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_zoom$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_zoom_extension_load$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_zoom_bad_geopackage$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_get_normal_zoom_bad_geopackage2$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgGetImageFormat$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgGetImageFormat_nonimage$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgGetImageFormat_nonblob$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgGetImageFormat_png$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgGetImageFormat_tiff$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgGetImageFormat_webp$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgConvert$(EXEEXT) \
@ENABLE_GEOPACKAGE_TRUE@	check_gpkgVirtual$(EXEEXT)
check_add_tile_triggers_SOURCES = check_add_tile_triggers.c
check_add_tile_triggers_OBJECTS = check_add_tile_triggers.$(OBJEXT)
check_add_tile_triggers_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
check_add_tile_triggers_bad_table_name_SOURCES =  \
	check_add_tile_triggers_bad_table_name.c
check_add_tile_triggers_bad_table_name_OBJECTS =  \
	check_add_tile_triggers_bad_table_name.$(OBJEXT)
check_add_tile_triggers_bad_table_name_LDADD = $(LDADD)
check_bufovflw_SOURCES = check_bufovflw.c
check_bufovflw_OBJECTS = check_bufovflw.$(OBJEXT)
check_bufovflw_LDADD = $(LDADD)
check_create_SOURCES = check_create.c
check_create_OBJECTS = check_create.$(OBJEXT)
check_create_LDADD = $(LDADD)
check_createBaseTables_SOURCES = check_createBaseTables.c
check_createBaseTables_OBJECTS = check_createBaseTables.$(OBJEXT)
check_createBaseTables_LDADD = $(LDADD)
check_dbf_load_SOURCES = check_dbf_load.c
check_dbf_load_OBJECTS = check_dbf_load.$(OBJEXT)
check_dbf_load_LDADD = $(LDADD)
check_dxf_SOURCES = check_dxf.c
check_dxf_OBJECTS = check_dxf.$(OBJEXT)
check_dxf_LDADD = $(LDADD)
check_endian_SOURCES = check_endian.c
check_endian_OBJECTS = check_endian.$(OBJEXT)
check_endian_LDADD = $(LDADD)
check_exif_SOURCES = check_exif.c
check_exif_OBJECTS = check_exif.$(OBJEXT)
check_exif_LDADD = $(LDADD)
check_exif2_SOURCES = check_exif2.c
check_exif2_OBJECTS = check_exif2.$(OBJEXT)
check_exif2_LDADD = $(LDADD)
check_extension_SOURCES = check_extension.c
check_extension_OBJECTS = check_extension.$(OBJEXT)
check_extension_LDADD = $(LDADD)
check_extra_relations_fncts_SOURCES = check_extra_relations_fncts.c
check_extra_relations_fncts_OBJECTS =  \
	check_extra_relations_fncts.$(OBJEXT)
check_extra_relations_fncts_LDADD = $(LDADD)
check_fdo1_SOURCES = check_fdo1.c
check_fdo1_OBJECTS = check_fdo1.$(OBJEXT)
check_fdo1_LDADD = $(LDADD)
check_fdo2_SOURCES = check_fdo2.c
check_fdo2_OBJECTS = check_fdo2.$(OBJEXT)
check_fdo2_LDADD = $(LDADD)
check_fdo3_SOURCES = check_fdo3.c
check_fdo3_OBJECTS = check_fdo3.$(OBJEXT)
check_fdo3_LDADD = $(LDADD)
check_fdo_bufovflw_SOURCES = check_fdo_bufovflw.c
check_fdo_bufovflw_OBJECTS = check_fdo_bufovflw.$(OBJEXT)
check_fdo_bufovflw_LDADD = $(LDADD)
check_gaia_utf8_SOURCES = check_gaia_utf8.c
check_gaia_utf8_OBJECTS = check_gaia_utf8.$(OBJEXT)
check_gaia_utf8_LDADD = $(LDADD)
check_gaia_util_SOURCES = check_gaia_util.c
check_gaia_util_OBJECTS = check_gaia_util.$(OBJEXT)
check_gaia_util_LDADD = $(LDADD)
check_geom_aux_SOURCES = check_geom_aux.c
check_geom_aux_OBJECTS = check_geom_aux.$(OBJEXT)
check_geom_aux_LDADD = $(LDADD)
check_geometry_cols_SOURCES = check_geometry_cols.c
check_geometry_cols_OBJECTS = check_geometry_cols.$(OBJEXT)
check_geometry_cols_LDADD = $(LDADD)
check_geoscvt_fncts_SOURCES = check_geoscvt_fncts.c
check_geoscvt_fncts_OBJECTS = check_geoscvt_fncts.$(OBJEXT)
check_geoscvt_fncts_LDADD = $(LDADD)
check_get_normal_row_SOURCES = check_get_normal_row.c
check_get_normal_row_OBJECTS = check_get_normal_row.$(OBJEXT)
check_get_normal_row_LDADD = $(LDADD)
check_get_normal_row_bad_geopackage_SOURCES =  \
	check_get_normal_row_bad_geopackage.c
check_get_normal_row_bad_geopackage_OBJECTS =  \
	check_get_normal_row_bad_geopackage.$(OBJEXT)
check_get_normal_row_bad_geopackage_LDADD = $(LDADD)
check_get_normal_row_bad_geopackage2_SOURCES =  \
	check_get_normal_row_bad_geopackage2.c
check_get_normal_row_bad_geopackage2_OBJECTS =  \
	check_get_normal_row_bad_geopackage2.$(OBJEXT)
check_get_normal_row_bad_geopackage2_LDADD = $(LDADD)
check_get_normal_zoom_SOURCES = check_get_normal_zoom.c
check_get_normal_zoom_OBJECTS = check_get_normal_zoom.$(OBJEXT)
check_get_normal_zoom_LDADD = $(LDADD)
check_get_normal_zoom_bad_geopackage_SOURCES =  \
	check_get_normal_zoom_bad_geopackage.c
check_get_normal_zoom_bad_geopackage_OBJECTS =  \
	check_get_normal_zoom_bad_geopackage.$(OBJEXT)
check_get_normal_zoom_bad_geopackage_LDADD = $(LDADD)
check_get_normal_zoom_bad_geopackage2_SOURCES =  \
	check_get_normal_zoom_bad_geopackage2.c
check_get_normal_zoom_bad_geopackage2_OBJECTS =  \
	check_get_normal_zoom_bad_geopackage2.$(OBJEXT)
check_get_normal_zoom_bad_geopackage2_LDADD = $(LDADD)
check_get_normal_zoom_extension_load_SOURCES =  \
	check_get_normal_zoom_extension_load.c
check_get_normal_zoom_extension_load_OBJECTS =  \
	check_get_normal_zoom_extension_load.$(OBJEXT)
check_get_normal_zoom_extension_load_LDADD = $(LDADD)
check_gpkgConvert_SOURCES = check_gpkgConvert.c
check_gpkgConvert_OBJECTS = check_gpkgConvert.$(OBJEXT)
check_gpkgConvert_LDADD = $(LDADD)
check_gpkgCreateFeaturesTable_SOURCES =  \
	check_gpkgCreateFeaturesTable.c
check_gpkgCreateFeaturesTable_OBJECTS =  \
	check_gpkgCreateFeaturesTable.$(OBJEXT)
check_gpkgCreateFeaturesTable_LDADD = $(LDADD)
check_gpkgCreateTilesTable_SOURCES = check_gpkgCreateTilesTable.c
check_gpkgCreateTilesTable_OBJECTS =  \
	check_gpkgCreateTilesTable.$(OBJEXT)
check_gpkgCreateTilesTable_LDADD = $(LDADD)
check_gpkgCreateTilesTableMissingSRID_SOURCES =  \
	check_gpkgCreateTilesTableMissingSRID.c
check_gpkgCreateTilesTableMissingSRID_OBJECTS =  \
	check_gpkgCreateTilesTableMissingSRID.$(OBJEXT)
check_gpkgCreateTilesTableMissingSRID_LDADD = $(LDADD)
check_gpkgCreateTilesZoomLevel_SOURCES =  \
	check_gpkgCreateTilesZoomLevel.c
check_gpkgCreateTilesZoomLevel_OBJECTS =  \
	check_gpkgCreateTilesZoomLevel.$(OBJEXT)
check_gpkgCreateTilesZoomLevel_LDADD = $(LDADD)
check_gpkgGetImageFormat_SOURCES = check_gpkgGetImageFormat.c
check_gpkgGetImageFormat_OBJECTS = check_gpkgGetImageFormat.$(OBJEXT)
check_gpkgGetImageFormat_LDADD = $(LDADD)
check_gpkgGetImageFormat_nonblob_SOURCES =  \
	check_gpkgGetImageFormat_nonblob.c
check_gpkgGetImageFormat_nonblob_OBJECTS =  \
	check_gpkgGetImageFormat_nonblob.$(OBJEXT)
check_gpkgGetImageFormat_nonblob_LDADD = $(LDADD)
check_gpkgGetImageFormat_nonimage_SOURCES =  \
	check_gpkgGetImageFormat_nonimage.c
check_gpkgGetImageFormat_nonimage_OBJECTS =  \
	check_gpkgGetImageFormat_nonimage.$(OBJEXT)
check_gpkgGetImageFormat_nonimage_LDADD = $(LDADD)
check_gpkgGetImageFormat_png_SOURCES = check_gpkgGetImageFormat_png.c
check_gpkgGetImageFormat_png_OBJECTS =  \
	check_gpkgGetImageFormat_png.$(OBJEXT)
check_gpkgGetImageFormat_png_LDADD = $(LDADD)
check_gpkgGetImageFormat_tiff_SOURCES =  \
	check_gpkgGetImageFormat_tiff.c
check_gpkgGetImageFormat_tiff_OBJECTS =  \
	check_gpkgGetImageFormat_tiff.$(OBJEXT)
check_gpkgGetImageFormat_tiff_LDADD = $(LDADD)
check_gpkgGetImageFormat_webp_SOURCES =  \
	check_gpkgGetImageFormat_webp.c
check_gpkgGetImageFormat_webp_OBJECTS =  \
	check_gpkgGetImageFormat_webp.$(OBJEXT)
check_gpkgGetImageFormat_webp_LDADD = $(LDADD)
check_gpkgInsertEpsgSRID_SOURCES = check_gpkgInsertEpsgSRID.c
check_gpkgInsertEpsgSRID_OBJECTS = check_gpkgInsertEpsgSRID.$(OBJEXT)
check_gpkgInsertEpsgSRID_LDADD = $(LDADD)
check_gpkgVirtual_SOURCES = check_gpkgVirtual.c
check_gpkgVirtual_OBJECTS = check_gpkgVirtual.$(OBJEXT)
check_gpkgVirtual_LDADD = $(LDADD)
check_gpkg_base_core_container_data_file_format_application_id_SOURCES = check_gpkg_base_core_container_data_file_format_application_id.c
check_gpkg_base_core_container_data_file_format_application_id_OBJECTS = check_gpkg_base_core_container_data_file_format_application_id.$(OBJEXT)
check_gpkg_base_core_container_data_file_format_application_id_LDADD =  \
	$(LDADD)
check_gpkg_base_core_contents_data_table_def_SOURCES =  \
	check_gpkg_base_core_contents_data_table_def.c
check_gpkg_base_core_contents_data_table_def_OBJECTS =  \
	check_gpkg_base_core_contents_data_table_def.$(OBJEXT)
check_gpkg_base_core_contents_data_table_def_LDADD = $(LDADD)
check_gpkg_base_core_spatial_ref_sys_data_table_def_SOURCES =  \
	check_gpkg_base_core_spatial_ref_sys_data_table_def.c
check_gpkg_base_core_spatial_ref_sys_data_table_def_OBJECTS =  \
	check_gpkg_base_core_spatial_ref_sys_data_table_def.$(OBJEXT)
check_gpkg_base_core_spatial_ref_sys_data_table_def_LDADD = $(LDADD)
check_gpkg_base_core_spatial_ref_sys_data_values_default_SOURCES =  \
	check_gpkg_base_core_spatial_ref_sys_data_values_default.c
check_gpkg_base_core_spatial_ref_sys_data_values_default_OBJECTS = check_gpkg_base_core_spatial_ref_sys_data_values_default.$(OBJEXT)
check_gpkg_base_core_spatial_ref_sys_data_values_default_LDADD =  \
	$(LDADD)
check_gpkg_opt_extension_mechanism_extensions_data_table_def_SOURCES = check_gpkg_opt_extension_mechanism_extensions_data_table_def.c
check_gpkg_opt_extension_mechanism_extensions_data_table_def_OBJECTS = check_gpkg_opt_extension_mechanism_extensions_data_table_def.$(OBJEXT)
check_gpkg_opt_extension_mechanism_extensions_data_table_def_LDADD =  \
	$(LDADD)
check_init_SOURCES = check_init.c
check_init_OBJECTS = check_init.$(OBJEXT)
check_init_LDADD = $(LDADD)
check_init2_SOURCES = check_init2.c
check_init2_OBJECTS = check_init2.$(OBJEXT)
check_init2_LDADD = $(LDADD)
check_libxml2_SOURCES = check_libxml2.c
check_libxml2_OBJECTS = check_libxml2.$(OBJEXT)
check_libxml2_LDADD = $(LDADD)
check_math_funcs_SOURCES = check_math_funcs.c
check_math_funcs_OBJECTS = check_math_funcs.$(OBJEXT)
check_math_funcs_LDADD = $(LDADD)
check_mbrcache_SOURCES = check_mbrcache.c
check_mbrcache_OBJECTS = check_mbrcache.$(OBJEXT)
check_mbrcache_LDADD = $(LDADD)
check_md5_SOURCES = check_md5.c
check_md5_OBJECTS = check_md5.$(OBJEXT)
check_md5_LDADD = $(LDADD)
check_metacatalog_SOURCES = check_metacatalog.c
check_metacatalog_OBJECTS = check_metacatalog.$(OBJEXT)
check_metacatalog_LDADD = $(LDADD)
check_multithread_SOURCES = check_multithread.c
check_multithread_OBJECTS = check_multithread.$(OBJEXT)
check_multithread_LDADD = $(LDADD)
check_recover_geom_SOURCES = check_recover_geom.c
check_recover_geom_OBJECTS = check_recover_geom.$(OBJEXT)
check_recover_geom_LDADD = $(LDADD)
check_relations_fncts_SOURCES = check_relations_fncts.c
check_relations_fncts_OBJECTS = check_relations_fncts.$(OBJEXT)
check_relations_fncts_LDADD = $(LDADD)
check_shp_load_SOURCES = check_shp_load.c
check_shp_load_OBJECTS = check_shp_load.$(OBJEXT)
check_shp_load_LDADD = $(LDADD)
check_shp_load_3d_SOURCES = check_shp_load_3d.c
check_shp_load_3d_OBJECTS = check_shp_load_3d.$(OBJEXT)
check_shp_load_3d_LDADD = $(LDADD)
check_spatialindex_SOURCES = check_spatialindex.c
check_spatialindex_OBJECTS = check_spatialindex.$(OBJEXT)
check_spatialindex_LDADD = $(LDADD)
check_sql_stmt_SOURCES = check_sql_stmt.c
check_sql_stmt_OBJECTS = check_sql_stmt.$(OBJEXT)
check_sql_stmt_LDADD = $(LDADD)
check_styling_SOURCES = check_styling.c
check_styling_OBJECTS = check_styling.$(OBJEXT)
check_styling_LDADD = $(LDADD)
check_version_SOURCES = check_version.c
check_version_OBJECTS = check_version.$(OBJEXT)
check_version_LDADD = $(LDADD)
check_virtual_ovflw_SOURCES = check_virtual_ovflw.c
check_virtual_ovflw_OBJECTS = check_virtual_ovflw.$(OBJEXT)
check_virtual_ovflw_LDADD = $(LDADD)
check_virtualbbox_SOURCES = check_virtualbbox.c
check_virtualbbox_OBJECTS = check_virtualbbox.$(OBJEXT)
check_virtualbbox_LDADD = $(LDADD)
check_virtualtable1_SOURCES = check_virtualtable1.c
check_virtualtable1_OBJECTS = check_virtualtable1.$(OBJEXT)
check_virtualtable1_LDADD = $(LDADD)
check_virtualtable2_SOURCES = check_virtualtable2.c
check_virtualtable2_OBJECTS = check_virtualtable2.$(OBJEXT)
check_virtualtable2_LDADD = $(LDADD)
check_virtualtable3_SOURCES = check_virtualtable3.c
check_virtualtable3_OBJECTS = check_virtualtable3.$(OBJEXT)
check_virtualtable3_LDADD = $(LDADD)
check_virtualtable4_SOURCES = check_virtualtable4.c
check_virtualtable4_OBJECTS = check_virtualtable4.$(OBJEXT)
check_virtualtable4_LDADD = $(LDADD)
check_virtualtable5_SOURCES = check_virtualtable5.c
check_virtualtable5_OBJECTS = check_virtualtable5.$(OBJEXT)
check_virtualtable5_LDADD = $(LDADD)
check_virtualtable6_SOURCES = check_virtualtable6.c
check_virtualtable6_OBJECTS = check_virtualtable6.$(OBJEXT)
check_virtualtable6_LDADD = $(LDADD)
check_virtualxpath_SOURCES = check_virtualxpath.c
check_virtualxpath_OBJECTS = check_virtualxpath.$(OBJEXT)
check_virtualxpath_LDADD = $(LDADD)
check_wfsin_SOURCES = check_wfsin.c
check_wfsin_OBJECTS = check_wfsin.$(OBJEXT)
check_wfsin_LDADD = $(LDADD)
check_xls_load_SOURCES = check_xls_load.c
check_xls_load_OBJECTS = check_xls_load.$(OBJEXT)
check_xls_load_LDADD = $(LDADD)
shape_3d_SOURCES = shape_3d.c
shape_3d_OBJECTS = shape_3d.$(OBJEXT)
shape_3d_LDADD = $(LDADD)
shape_cp1252_SOURCES = shape_cp1252.c
shape_cp1252_OBJECTS = shape_cp1252.$(OBJEXT)
shape_cp1252_LDADD = $(LDADD)
shape_primitives_SOURCES = shape_primitives.c
shape_primitives_OBJECTS = shape_primitives.$(OBJEXT)
shape_primitives_LDADD = $(LDADD)
shape_utf8_1_SOURCES = shape_utf8_1.c
shape_utf8_1_OBJECTS = shape_utf8_1.$(OBJEXT)
shape_utf8_1_LDADD = $(LDADD)
shape_utf8_1ex_SOURCES = shape_utf8_1ex.c
shape_utf8_1ex_OBJECTS = shape_utf8_1ex.$(OBJEXT)
shape_utf8_1ex_LDADD = $(LDADD)
shape_utf8_2_SOURCES = shape_utf8_2.c
shape_utf8_2_OBJECTS = shape_utf8_2.$(OBJEXT)
shape_utf8_2_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = check_add_tile_triggers.c \
	check_add_tile_triggers_bad_table_name.c check_bufovflw.c \
	check_create.c check_createBaseTables.c check_dbf_load.c \
	check_dxf.c check_endian.c check_exif.c check_exif2.c \
	check_extension.c check_extra_relations_fncts.c check_fdo1.c \
	check_fdo2.c check_fdo3.c check_fdo_bufovflw.c \
	check_gaia_utf8.c check_gaia_util.c check_geom_aux.c \
	check_geometry_cols.c check_geoscvt_fncts.c \
	check_get_normal_row.c check_get_normal_row_bad_geopackage.c \
	check_get_normal_row_bad_geopackage2.c check_get_normal_zoom.c \
	check_get_normal_zoom_bad_geopackage.c \
	check_get_normal_zoom_bad_geopackage2.c \
	check_get_normal_zoom_extension_load.c check_gpkgConvert.c \
	check_gpkgCreateFeaturesTable.c check_gpkgCreateTilesTable.c \
	check_gpkgCreateTilesTableMissingSRID.c \
	check_gpkgCreateTilesZoomLevel.c check_gpkgGetImageFormat.c \
	check_gpkgGetImageFormat_nonblob.c \
	check_gpkgGetImageFormat_nonimage.c \
	check_gpkgGetImageFormat_png.c check_gpkgGetImageFormat_tiff.c \
	check_gpkgGetImageFormat_webp.c check_gpkgInsertEpsgSRID.c \
	check_gpkgVirtual.c \
	check_gpkg_base_core_container_data_file_format_application_id.c \
	check_gpkg_base_core_contents_data_table_def.c \
	check_gpkg_base_core_spatial_ref_sys_data_table_def.c \
	check_gpkg_base_core_spatial_ref_sys_data_values_default.c \
	check_gpkg_opt_extension_mechanism_extensions_data_table_def.c \
	check_init.c check_init2.c check_libxml2.c check_math_funcs.c \
	check_mbrcache.c check_md5.c check_metacatalog.c \
	check_multithread.c check_recover_geom.c \
	check_relations_fncts.c check_shp_load.c check_shp_load_3d.c \
	check_spatialindex.c check_sql_stmt.c check_styling.c \
	check_version.c check_virtual_ovflw.c check_virtualbbox.c \
	check_virtualtable1.c check_virtualtable2.c \
	check_virtualtable3.c check_virtualtable4.c \
	check_virtualtable5.c check_virtualtable6.c \
	check_virtualxpath.c check_wfsin.c check_xls_load.c shape_3d.c \
	shape_cp1252.c shape_primitives.c shape_utf8_1.c \
	shape_utf8_1ex.c shape_utf8_2.c
DIST_SOURCES = check_add_tile_triggers.c \
	check_add_tile_triggers_bad_table_name.c check_bufovflw.c \
	check_create.c check_createBaseTables.c check_dbf_load.c \
	check_dxf.c check_endian.c check_exif.c check_exif2.c \
	check_extension.c check_extra_relations_fncts.c check_fdo1.c \
	check_fdo2.c check_fdo3.c check_fdo_bufovflw.c \
	check_gaia_utf8.c check_gaia_util.c check_geom_aux.c \
	check_geometry_cols.c check_geoscvt_fncts.c \
	check_get_normal_row.c check_get_normal_row_bad_geopackage.c \
	check_get_normal_row_bad_geopackage2.c check_get_normal_zoom.c \
	check_get_normal_zoom_bad_geopackage.c \
	check_get_normal_zoom_bad_geopackage2.c \
	check_get_normal_zoom_extension_load.c check_gpkgConvert.c \
	check_gpkgCreateFeaturesTable.c check_gpkgCreateTilesTable.c \
	check_gpkgCreateTilesTableMissingSRID.c \
	check_gpkgCreateTilesZoomLevel.c check_gpkgGetImageFormat.c \
	check_gpkgGetImageFormat_nonblob.c \
	check_gpkgGetImageFormat_nonimage.c \
	check_gpkgGetImageFormat_png.c check_gpkgGetImageFormat_tiff.c \
	check_gpkgGetImageFormat_webp.c check_gpkgInsertEpsgSRID.c \
	check_gpkgVirtual.c \
	check_gpkg_base_core_container_data_file_format_application_id.c \
	check_gpkg_base_core_contents_data_table_def.c \
	check_gpkg_base_core_spatial_ref_sys_data_table_def.c \
	check_gpkg_base_core_spatial_ref_sys_data_values_default.c \
	check_gpkg_opt_extension_mechanism_extensions_data_table_def.c \
	check_init.c check_init2.c check_libxml2.c check_math_funcs.c \
	check_mbrcache.c check_md5.c check_metacatalog.c \
	check_multithread.c check_recover_geom.c \
	check_relations_fncts.c check_shp_load.c check_shp_load_3d.c \
	check_spatialindex.c check_sql_stmt.c check_styling.c \
	check_version.c check_virtual_ovflw.c check_virtualbbox.c \
	check_virtualtable1.c check_virtualtable2.c \
	check_virtualtable3.c check_virtualtable4.c \
	check_virtualtable5.c check_virtualtable6.c \
	check_virtualxpath.c check_wfsin.c check_xls_load.c shape_3d.c \
	shape_cp1252.c shape_primitives.c shape_utf8_1.c \
	shape_utf8_1ex.c shape_utf8_2.c
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GEOSCONFIG = @GEOSCONFIG@
GEOS_CFLAGS = @GEOS_CFLAGS@
GEOS_LDFLAGS = @GEOS_LDFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBXML2_CFLAGS = @LIBXML2_CFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = @CFLAGS@ @GEOS_CFLAGS@ @LIBXML2_CFLAGS@
AM_CFLAGS = -I@srcdir@/../src/headers -I@srcdir@
AM_LDFLAGS = -L../src -lspatialite -lm $(GCOV_FLAGS)
TESTS = $(check_PROGRAMS)
MOSTLYCLEANFILES = *.gcna *.gcno *.gcda
EXTRA_DIST = asprintf4win.h \
	fnmatch_impl4win.h \
	fnmatch4win.h \
	scandir4win.h \
	test_helpers.h \
	shapetest1.dbf \
	shapetest1.prj \
	shapetest1.qpj \
	shapetest1.shp \
	shapetest1.shx \
	test_under_valgrind.sh \
	WritingSQLTestCase.txt \
	test-legacy-2.3.1.sqlite \
	test-legacy-3.0.1.sqlite \
	test-invalid.sqlite \
	test_geos.sqlite \
	shp/new-caledonia/buildings.dbf \
	shp/new-caledonia/buildings.prj \
	shp/new-caledonia/buildings.shp \
	shp/new-caledonia/buildings.shx \
	shp/new-caledonia/points.dbf \
	shp/new-caledonia/points.prj \
	shp/new-caledonia/points.shp \
	shp/new-caledonia/points.shx \
	shp/new-caledonia/railways.dbf \
	shp/new-caledonia/railways.shp \
	shp/new-caledonia/railways.shx \
	shp/gaza/aeroway.dbf \
	shp/gaza/aeroway.prj \
	shp/gaza/aeroway.shp \
	shp/gaza/aeroway.shx \
	shp/gaza/barrier.dbf \
	shp/gaza/barrier.prj \
	shp/gaza/barrier.shp \
	shp/gaza/barrier.shx \
	shp/gaza/route.dbf \
	shp/gaza/route.prj \
	shp/gaza/route.shp \
	shp/gaza/route.shx \
	shp/taiwan/hystoric.dbf \
	shp/taiwan/hystoric.prj \
	shp/taiwan/hystoric.shp \
	shp/taiwan/hystoric.shx \
	shp/taiwan/leisure.dbf \
	shp/taiwan/leisure.prj \
	shp/taiwan/leisure.shp \
	shp/taiwan/leisure.shx \
	shp/taiwan/route.dbf \
	shp/taiwan/route.prj \
	shp/taiwan/route.shp \
	shp/taiwan/route.shx \
	shp/merano-3d/points.dbf \
	shp/merano-3d/points.prj \
	shp/merano-3d/points.shp \
	shp/merano-3d/points.shx \
	shp/merano-3d/polygons.dbf \
	shp/merano-3d/polygons.prj \
	shp/merano-3d/polygons.shp \
	shp/merano-3d/polygons.shx \
	shp/merano-3d/roads.dbf \
	shp/merano-3d/roads.prj \
	shp/merano-3d/roads.shp \
	shp/merano-3d/roads.shx \
	shp/foggia/local_councils.dbf \
	shp/foggia/local_councils.prj \
	shp/foggia/local_councils.shp \
	shp/foggia/local_councils.shx \
	testcase1.xls \
	testcase1.csv \
	books.xml books.xsd opera.xml opera.xsd \
	movies.xml movies.xsd books-bad.xml books-bad.xsd \
	inspire-data-example.xml stazioni_se.xml \
	raster_se.xml sld_sample.xml thunderstorm_mild.svg \
	tile000.jpeg  tile101.jpeg  tile111.jpeg \
	test.webp tile100.jpeg  tile110.jpeg \
	Apple-iPhone-4.jpg empty.png  empty.tif \
	test.wfs testDescribeFeatureType.wfs \
	getcapabilities-1.0.0.wfs \
	getcapabilities-1.1.0.wfs \
	describefeaturetype.wfs	\
	22.dxf f06.dxf l02.dxf p05.dxf \
	archaic.dxf linked.dxf hatch.dxf \
	symbol.dxf gpkg_test.sqlite gpkg_test.gpkg

SUBDIRS = sql_stmt_geosadvanced_tests sql_stmt_geos_tests \
	sql_stmt_libxml2_tests sql_stmt_lwgeom_tests \
	sql_stmt_mathsql_tests sql_stmt_proj_tests \
	sql_stmt_security_tests sql_stmt_tests \
	sql_stmt_xmlsec_tests sql_stmt_geopackage_tests

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

check_add_tile_triggers$(EXEEXT): $(check_add_tile_triggers_OBJECTS) $(check_add_tile_triggers_DEPENDENCIES) $(EXTRA_check_add_tile_triggers_DEPENDENCIES) 
	@rm -f check_add_tile_triggers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_add_tile_triggers_OBJECTS) $(check_add_tile_triggers_LDADD) $(LIBS)

check_add_tile_triggers_bad_table_name$(EXEEXT): $(check_add_tile_triggers_bad_table_name_OBJECTS) $(check_add_tile_triggers_bad_table_name_DEPENDENCIES) $(EXTRA_check_add_tile_triggers_bad_table_name_DEPENDENCIES) 
	@rm -f check_add_tile_triggers_bad_table_name$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_add_tile_triggers_bad_table_name_OBJECTS) $(check_add_tile_triggers_bad_table_name_LDADD) $(LIBS)

check_bufovflw$(EXEEXT): $(check_bufovflw_OBJECTS) $(check_bufovflw_DEPENDENCIES) $(EXTRA_check_bufovflw_DEPENDENCIES) 
	@rm -f check_bufovflw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_bufovflw_OBJECTS) $(check_bufovflw_LDADD) $(LIBS)

check_create$(EXEEXT): $(check_create_OBJECTS) $(check_create_DEPENDENCIES) $(EXTRA_check_create_DEPENDENCIES) 
	@rm -f check_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_create_OBJECTS) $(check_create_LDADD) $(LIBS)

check_createBaseTables$(EXEEXT): $(check_createBaseTables_OBJECTS) $(check_createBaseTables_DEPENDENCIES) $(EXTRA_check_createBaseTables_DEPENDENCIES) 
	@rm -f check_createBaseTables$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_createBaseTables_OBJECTS) $(check_createBaseTables_LDADD) $(LIBS)

check_dbf_load$(EXEEXT): $(check_dbf_load_OBJECTS) $(check_dbf_load_DEPENDENCIES) $(EXTRA_check_dbf_load_DEPENDENCIES) 
	@rm -f check_dbf_load$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_dbf_load_OBJECTS) $(check_dbf_load_LDADD) $(LIBS)

check_dxf$(EXEEXT): $(check_dxf_OBJECTS) $(check_dxf_DEPENDENCIES) $(EXTRA_check_dxf_DEPENDENCIES) 
	@rm -f check_dxf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_dxf_OBJECTS) $(check_dxf_LDADD) $(LIBS)

check_endian$(EXEEXT): $(check_endian_OBJECTS) $(check_endian_DEPENDENCIES) $(EXTRA_check_endian_DEPENDENCIES) 
	@rm -f check_endian$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_endian_OBJECTS) $(check_endian_LDADD) $(LIBS)

check_exif$(EXEEXT): $(check_exif_OBJECTS) $(check_exif_DEPENDENCIES) $(EXTRA_check_exif_DEPENDENCIES) 
	@rm -f check_exif$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_exif_OBJECTS) $(check_exif_LDADD) $(LIBS)

check_exif2$(EXEEXT): $(check_exif2_OBJECTS) $(check_exif2_DEPENDENCIES) $(EXTRA_check_exif2_DEPENDENCIES) 
	@rm -f check_exif2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_exif2_OBJECTS) $(check_exif2_LDADD) $(LIBS)

check_extension$(EXEEXT): $(check_extension_OBJECTS) $(check_extension_DEPENDENCIES) $(EXTRA_check_extension_DEPENDENCIES) 
	@rm -f check_extension$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_extension_OBJECTS) $(check_extension_LDADD) $(LIBS)

check_extra_relations_fncts$(EXEEXT): $(check_extra_relations_fncts_OBJECTS) $(check_extra_relations_fncts_DEPENDENCIES) $(EXTRA_check_extra_relations_fncts_DEPENDENCIES) 
	@rm -f check_extra_relations_fncts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_extra_relations_fncts_OBJECTS) $(check_extra_relations_fncts_LDADD) $(LIBS)

check_fdo1$(EXEEXT): $(check_fdo1_OBJECTS) $(check_fdo1_DEPENDENCIES) $(EXTRA_check_fdo1_DEPENDENCIES) 
	@rm -f check_fdo1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_fdo1_OBJECTS) $(check_fdo1_LDADD) $(LIBS)

check_fdo2$(EXEEXT): $(check_fdo2_OBJECTS) $(check_fdo2_DEPENDENCIES) $(EXTRA_check_fdo2_DEPENDENCIES) 
	@rm -f check_fdo2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_fdo2_OBJECTS) $(check_fdo2_LDADD) $(LIBS)

check_fdo3$(EXEEXT): $(check_fdo3_OBJECTS) $(check_fdo3_DEPENDENCIES) $(EXTRA_check_fdo3_DEPENDENCIES) 
	@rm -f check_fdo3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_fdo3_OBJECTS) $(check_fdo3_LDADD) $(LIBS)

check_fdo_bufovflw$(EXEEXT): $(check_fdo_bufovflw_OBJECTS) $(check_fdo_bufovflw_DEPENDENCIES) $(EXTRA_check_fdo_bufovflw_DEPENDENCIES) 
	@rm -f check_fdo_bufovflw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_fdo_bufovflw_OBJECTS) $(check_fdo_bufovflw_LDADD) $(LIBS)

check_gaia_utf8$(EXEEXT): $(check_gaia_utf8_OBJECTS) $(check_gaia_utf8_DEPENDENCIES) $(EXTRA_check_gaia_utf8_DEPENDENCIES) 
	@rm -f check_gaia_utf8$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gaia_utf8_OBJECTS) $(check_gaia_utf8_LDADD) $(LIBS)

check_gaia_util$(EXEEXT): $(check_gaia_util_OBJECTS) $(check_gaia_util_DEPENDENCIES) $(EXTRA_check_gaia_util_DEPENDENCIES) 
	@rm -f check_gaia_util$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gaia_util_OBJECTS) $(check_gaia_util_LDADD) $(LIBS)

check_geom_aux$(EXEEXT): $(check_geom_aux_OBJECTS) $(check_geom_aux_DEPENDENCIES) $(EXTRA_check_geom_aux_DEPENDENCIES) 
	@rm -f check_geom_aux$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_geom_aux_OBJECTS) $(check_geom_aux_LDADD) $(LIBS)

check_geometry_cols$(EXEEXT): $(check_geometry_cols_OBJECTS) $(check_geometry_cols_DEPENDENCIES) $(EXTRA_check_geometry_cols_DEPENDENCIES) 
	@rm -f check_geometry_cols$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_geometry_cols_OBJECTS) $(check_geometry_cols_LDADD) $(LIBS)

check_geoscvt_fncts$(EXEEXT): $(check_geoscvt_fncts_OBJECTS) $(check_geoscvt_fncts_DEPENDENCIES) $(EXTRA_check_geoscvt_fncts_DEPENDENCIES) 
	@rm -f check_geoscvt_fncts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_geoscvt_fncts_OBJECTS) $(check_geoscvt_fncts_LDADD) $(LIBS)

check_get_normal_row$(EXEEXT): $(check_get_normal_row_OBJECTS) $(check_get_normal_row_DEPENDENCIES) $(EXTRA_check_get_normal_row_DEPENDENCIES) 
	@rm -f check_get_normal_row$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_row_OBJECTS) $(check_get_normal_row_LDADD) $(LIBS)

check_get_normal_row_bad_geopackage$(EXEEXT): $(check_get_normal_row_bad_geopackage_OBJECTS) $(check_get_normal_row_bad_geopackage_DEPENDENCIES) $(EXTRA_check_get_normal_row_bad_geopackage_DEPENDENCIES) 
	@rm -f check_get_normal_row_bad_geopackage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_row_bad_geopackage_OBJECTS) $(check_get_normal_row_bad_geopackage_LDADD) $(LIBS)

check_get_normal_row_bad_geopackage2$(EXEEXT): $(check_get_normal_row_bad_geopackage2_OBJECTS) $(check_get_normal_row_bad_geopackage2_DEPENDENCIES) $(EXTRA_check_get_normal_row_bad_geopackage2_DEPENDENCIES) 
	@rm -f check_get_normal_row_bad_geopackage2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_row_bad_geopackage2_OBJECTS) $(check_get_normal_row_bad_geopackage2_LDADD) $(LIBS)

check_get_normal_zoom$(EXEEXT): $(check_get_normal_zoom_OBJECTS) $(check_get_normal_zoom_DEPENDENCIES) $(EXTRA_check_get_normal_zoom_DEPENDENCIES) 
	@rm -f check_get_normal_zoom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_zoom_OBJECTS) $(check_get_normal_zoom_LDADD) $(LIBS)

check_get_normal_zoom_bad_geopackage$(EXEEXT): $(check_get_normal_zoom_bad_geopackage_OBJECTS) $(check_get_normal_zoom_bad_geopackage_DEPENDENCIES) $(EXTRA_check_get_normal_zoom_bad_geopackage_DEPENDENCIES) 
	@rm -f check_get_normal_zoom_bad_geopackage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_zoom_bad_geopackage_OBJECTS) $(check_get_normal_zoom_bad_geopackage_LDADD) $(LIBS)

check_get_normal_zoom_bad_geopackage2$(EXEEXT): $(check_get_normal_zoom_bad_geopackage2_OBJECTS) $(check_get_normal_zoom_bad_geopackage2_DEPENDENCIES) $(EXTRA_check_get_normal_zoom_bad_geopackage2_DEPENDENCIES) 
	@rm -f check_get_normal_zoom_bad_geopackage2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_zoom_bad_geopackage2_OBJECTS) $(check_get_normal_zoom_bad_geopackage2_LDADD) $(LIBS)

check_get_normal_zoom_extension_load$(EXEEXT): $(check_get_normal_zoom_extension_load_OBJECTS) $(check_get_normal_zoom_extension_load_DEPENDENCIES) $(EXTRA_check_get_normal_zoom_extension_load_DEPENDENCIES) 
	@rm -f check_get_normal_zoom_extension_load$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_get_normal_zoom_extension_load_OBJECTS) $(check_get_normal_zoom_extension_load_LDADD) $(LIBS)

check_gpkgConvert$(EXEEXT): $(check_gpkgConvert_OBJECTS) $(check_gpkgConvert_DEPENDENCIES) $(EXTRA_check_gpkgConvert_DEPENDENCIES) 
	@rm -f check_gpkgConvert$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgConvert_OBJECTS) $(check_gpkgConvert_LDADD) $(LIBS)

check_gpkgCreateFeaturesTable$(EXEEXT): $(check_gpkgCreateFeaturesTable_OBJECTS) $(check_gpkgCreateFeaturesTable_DEPENDENCIES) $(EXTRA_check_gpkgCreateFeaturesTable_DEPENDENCIES) 
	@rm -f check_gpkgCreateFeaturesTable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgCreateFeaturesTable_OBJECTS) $(check_gpkgCreateFeaturesTable_LDADD) $(LIBS)

check_gpkgCreateTilesTable$(EXEEXT): $(check_gpkgCreateTilesTable_OBJECTS) $(check_gpkgCreateTilesTable_DEPENDENCIES) $(EXTRA_check_gpkgCreateTilesTable_DEPENDENCIES) 
	@rm -f check_gpkgCreateTilesTable$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgCreateTilesTable_OBJECTS) $(check_gpkgCreateTilesTable_LDADD) $(LIBS)

check_gpkgCreateTilesTableMissingSRID$(EXEEXT): $(check_gpkgCreateTilesTableMissingSRID_OBJECTS) $(check_gpkgCreateTilesTableMissingSRID_DEPENDENCIES) $(EXTRA_check_gpkgCreateTilesTableMissingSRID_DEPENDENCIES) 
	@rm -f check_gpkgCreateTilesTableMissingSRID$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgCreateTilesTableMissingSRID_OBJECTS) $(check_gpkgCreateTilesTableMissingSRID_LDADD) $(LIBS)

check_gpkgCreateTilesZoomLevel$(EXEEXT): $(check_gpkgCreateTilesZoomLevel_OBJECTS) $(check_gpkgCreateTilesZoomLevel_DEPENDENCIES) $(EXTRA_check_gpkgCreateTilesZoomLevel_DEPENDENCIES) 
	@rm -f check_gpkgCreateTilesZoomLevel$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgCreateTilesZoomLevel_OBJECTS) $(check_gpkgCreateTilesZoomLevel_LDADD) $(LIBS)

check_gpkgGetImageFormat$(EXEEXT): $(check_gpkgGetImageFormat_OBJECTS) $(check_gpkgGetImageFormat_DEPENDENCIES) $(EXTRA_check_gpkgGetImageFormat_DEPENDENCIES) 
	@rm -f check_gpkgGetImageFormat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgGetImageFormat_OBJECTS) $(check_gpkgGetImageFormat_LDADD) $(LIBS)

check_gpkgGetImageFormat_nonblob$(EXEEXT): $(check_gpkgGetImageFormat_nonblob_OBJECTS) $(check_gpkgGetImageFormat_nonblob_DEPENDENCIES) $(EXTRA_check_gpkgGetImageFormat_nonblob_DEPENDENCIES) 
	@rm -f check_gpkgGetImageFormat_nonblob$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgGetImageFormat_nonblob_OBJECTS) $(check_gpkgGetImageFormat_nonblob_LDADD) $(LIBS)

check_gpkgGetImageFormat_nonimage$(EXEEXT): $(check_gpkgGetImageFormat_nonimage_OBJECTS) $(check_gpkgGetImageFormat_nonimage_DEPENDENCIES) $(EXTRA_check_gpkgGetImageFormat_nonimage_DEPENDENCIES) 
	@rm -f check_gpkgGetImageFormat_nonimage$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgGetImageFormat_nonimage_OBJECTS) $(check_gpkgGetImageFormat_nonimage_LDADD) $(LIBS)

check_gpkgGetImageFormat_png$(EXEEXT): $(check_gpkgGetImageFormat_png_OBJECTS) $(check_gpkgGetImageFormat_png_DEPENDENCIES) $(EXTRA_check_gpkgGetImageFormat_png_DEPENDENCIES) 
	@rm -f check_gpkgGetImageFormat_png$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgGetImageFormat_png_OBJECTS) $(check_gpkgGetImageFormat_png_LDADD) $(LIBS)

check_gpkgGetImageFormat_tiff$(EXEEXT): $(check_gpkgGetImageFormat_tiff_OBJECTS) $(check_gpkgGetImageFormat_tiff_DEPENDENCIES) $(EXTRA_check_gpkgGetImageFormat_tiff_DEPENDENCIES) 
	@rm -f check_gpkgGetImageFormat_tiff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgGetImageFormat_tiff_OBJECTS) $(check_gpkgGetImageFormat_tiff_LDADD) $(LIBS)

check_gpkgGetImageFormat_webp$(EXEEXT): $(check_gpkgGetImageFormat_webp_OBJECTS) $(check_gpkgGetImageFormat_webp_DEPENDENCIES) $(EXTRA_check_gpkgGetImageFormat_webp_DEPENDENCIES) 
	@rm -f check_gpkgGetImageFormat_webp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgGetImageFormat_webp_OBJECTS) $(check_gpkgGetImageFormat_webp_LDADD) $(LIBS)

check_gpkgInsertEpsgSRID$(EXEEXT): $(check_gpkgInsertEpsgSRID_OBJECTS) $(check_gpkgInsertEpsgSRID_DEPENDENCIES) $(EXTRA_check_gpkgInsertEpsgSRID_DEPENDENCIES) 
	@rm -f check_gpkgInsertEpsgSRID$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgInsertEpsgSRID_OBJECTS) $(check_gpkgInsertEpsgSRID_LDADD) $(LIBS)

check_gpkgVirtual$(EXEEXT): $(check_gpkgVirtual_OBJECTS) $(check_gpkgVirtual_DEPENDENCIES) $(EXTRA_check_gpkgVirtual_DEPENDENCIES) 
	@rm -f check_gpkgVirtual$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkgVirtual_OBJECTS) $(check_gpkgVirtual_LDADD) $(LIBS)

check_gpkg_base_core_container_data_file_format_application_id$(EXEEXT): $(check_gpkg_base_core_container_data_file_format_application_id_OBJECTS) $(check_gpkg_base_core_container_data_file_format_application_id_DEPENDENCIES) $(EXTRA_check_gpkg_base_core_container_data_file_format_application_id_DEPENDENCIES) 
	@rm -f check_gpkg_base_core_container_data_file_format_application_id$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkg_base_core_container_data_file_format_application_id_OBJECTS) $(check_gpkg_base_core_container_data_file_format_application_id_LDADD) $(LIBS)

check_gpkg_base_core_contents_data_table_def$(EXEEXT): $(check_gpkg_base_core_contents_data_table_def_OBJECTS) $(check_gpkg_base_core_contents_data_table_def_DEPENDENCIES) $(EXTRA_check_gpkg_base_core_contents_data_table_def_DEPENDENCIES) 
	@rm -f check_gpkg_base_core_contents_data_table_def$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkg_base_core_contents_data_table_def_OBJECTS) $(check_gpkg_base_core_contents_data_table_def_LDADD) $(LIBS)

check_gpkg_base_core_spatial_ref_sys_data_table_def$(EXEEXT): $(check_gpkg_base_core_spatial_ref_sys_data_table_def_OBJECTS) $(check_gpkg_base_core_spatial_ref_sys_data_table_def_DEPENDENCIES) $(EXTRA_check_gpkg_base_core_spatial_ref_sys_data_table_def_DEPENDENCIES) 
	@rm -f check_gpkg_base_core_spatial_ref_sys_data_table_def$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkg_base_core_spatial_ref_sys_data_table_def_OBJECTS) $(check_gpkg_base_core_spatial_ref_sys_data_table_def_LDADD) $(LIBS)

check_gpkg_base_core_spatial_ref_sys_data_values_default$(EXEEXT): $(check_gpkg_base_core_spatial_ref_sys_data_values_default_OBJECTS) $(check_gpkg_base_core_spatial_ref_sys_data_values_default_DEPENDENCIES) $(EXTRA_check_gpkg_base_core_spatial_ref_sys_data_values_default_DEPENDENCIES) 
	@rm -f check_gpkg_base_core_spatial_ref_sys_data_values_default$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkg_base_core_spatial_ref_sys_data_values_default_OBJECTS) $(check_gpkg_base_core_spatial_ref_sys_data_values_default_LDADD) $(LIBS)

check_gpkg_opt_extension_mechanism_extensions_data_table_def$(EXEEXT): $(check_gpkg_opt_extension_mechanism_extensions_data_table_def_OBJECTS) $(check_gpkg_opt_extension_mechanism_extensions_data_table_def_DEPENDENCIES) $(EXTRA_check_gpkg_opt_extension_mechanism_extensions_data_table_def_DEPENDENCIES) 
	@rm -f check_gpkg_opt_extension_mechanism_extensions_data_table_def$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_gpkg_opt_extension_mechanism_extensions_data_table_def_OBJECTS) $(check_gpkg_opt_extension_mechanism_extensions_data_table_def_LDADD) $(LIBS)

check_init$(EXEEXT): $(check_init_OBJECTS) $(check_init_DEPENDENCIES) $(EXTRA_check_init_DEPENDENCIES) 
	@rm -f check_init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_init_OBJECTS) $(check_init_LDADD) $(LIBS)

check_init2$(EXEEXT): $(check_init2_OBJECTS) $(check_init2_DEPENDENCIES) $(EXTRA_check_init2_DEPENDENCIES) 
	@rm -f check_init2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_init2_OBJECTS) $(check_init2_LDADD) $(LIBS)

check_libxml2$(EXEEXT): $(check_libxml2_OBJECTS) $(check_libxml2_DEPENDENCIES) $(EXTRA_check_libxml2_DEPENDENCIES) 
	@rm -f check_libxml2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_libxml2_OBJECTS) $(check_libxml2_LDADD) $(LIBS)

check_math_funcs$(EXEEXT): $(check_math_funcs_OBJECTS) $(check_math_funcs_DEPENDENCIES) $(EXTRA_check_math_funcs_DEPENDENCIES) 
	@rm -f check_math_funcs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_math_funcs_OBJECTS) $(check_math_funcs_LDADD) $(LIBS)

check_mbrcache$(EXEEXT): $(check_mbrcache_OBJECTS) $(check_mbrcache_DEPENDENCIES) $(EXTRA_check_mbrcache_DEPENDENCIES) 
	@rm -f check_mbrcache$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_mbrcache_OBJECTS) $(check_mbrcache_LDADD) $(LIBS)

check_md5$(EXEEXT): $(check_md5_OBJECTS) $(check_md5_DEPENDENCIES) $(EXTRA_check_md5_DEPENDENCIES) 
	@rm -f check_md5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_md5_OBJECTS) $(check_md5_LDADD) $(LIBS)

check_metacatalog$(EXEEXT): $(check_metacatalog_OBJECTS) $(check_metacatalog_DEPENDENCIES) $(EXTRA_check_metacatalog_DEPENDENCIES) 
	@rm -f check_metacatalog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_metacatalog_OBJECTS) $(check_metacatalog_LDADD) $(LIBS)

check_multithread$(EXEEXT): $(check_multithread_OBJECTS) $(check_multithread_DEPENDENCIES) $(EXTRA_check_multithread_DEPENDENCIES) 
	@rm -f check_multithread$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_multithread_OBJECTS) $(check_multithread_LDADD) $(LIBS)

check_recover_geom$(EXEEXT): $(check_recover_geom_OBJECTS) $(check_recover_geom_DEPENDENCIES) $(EXTRA_check_recover_geom_DEPENDENCIES) 
	@rm -f check_recover_geom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_recover_geom_OBJECTS) $(check_recover_geom_LDADD) $(LIBS)

check_relations_fncts$(EXEEXT): $(check_relations_fncts_OBJECTS) $(check_relations_fncts_DEPENDENCIES) $(EXTRA_check_relations_fncts_DEPENDENCIES) 
	@rm -f check_relations_fncts$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_relations_fncts_OBJECTS) $(check_relations_fncts_LDADD) $(LIBS)

check_shp_load$(EXEEXT): $(check_shp_load_OBJECTS) $(check_shp_load_DEPENDENCIES) $(EXTRA_check_shp_load_DEPENDENCIES) 
	@rm -f check_shp_load$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_shp_load_OBJECTS) $(check_shp_load_LDADD) $(LIBS)

check_shp_load_3d$(EXEEXT): $(check_shp_load_3d_OBJECTS) $(check_shp_load_3d_DEPENDENCIES) $(EXTRA_check_shp_load_3d_DEPENDENCIES) 
	@rm -f check_shp_load_3d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_shp_load_3d_OBJECTS) $(check_shp_load_3d_LDADD) $(LIBS)

check_spatialindex$(EXEEXT): $(check_spatialindex_OBJECTS) $(check_spatialindex_DEPENDENCIES) $(EXTRA_check_spatialindex_DEPENDENCIES) 
	@rm -f check_spatialindex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_spatialindex_OBJECTS) $(check_spatialindex_LDADD) $(LIBS)

check_sql_stmt$(EXEEXT): $(check_sql_stmt_OBJECTS) $(check_sql_stmt_DEPENDENCIES) $(EXTRA_check_sql_stmt_DEPENDENCIES) 
	@rm -f check_sql_stmt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_sql_stmt_OBJECTS) $(check_sql_stmt_LDADD) $(LIBS)

check_styling$(EXEEXT): $(check_styling_OBJECTS) $(check_styling_DEPENDENCIES) $(EXTRA_check_styling_DEPENDENCIES) 
	@rm -f check_styling$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_styling_OBJECTS) $(check_styling_LDADD) $(LIBS)

check_version$(EXEEXT): $(check_version_OBJECTS) $(check_version_DEPENDENCIES) $(EXTRA_check_version_DEPENDENCIES) 
	@rm -f check_version$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_version_OBJECTS) $(check_version_LDADD) $(LIBS)

check_virtual_ovflw$(EXEEXT): $(check_virtual_ovflw_OBJECTS) $(check_virtual_ovflw_DEPENDENCIES) $(EXTRA_check_virtual_ovflw_DEPENDENCIES) 
	@rm -f check_virtual_ovflw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtual_ovflw_OBJECTS) $(check_virtual_ovflw_LDADD) $(LIBS)

check_virtualbbox$(EXEEXT): $(check_virtualbbox_OBJECTS) $(check_virtualbbox_DEPENDENCIES) $(EXTRA_check_virtualbbox_DEPENDENCIES) 
	@rm -f check_virtualbbox$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualbbox_OBJECTS) $(check_virtualbbox_LDADD) $(LIBS)

check_virtualtable1$(EXEEXT): $(check_virtualtable1_OBJECTS) $(check_virtualtable1_DEPENDENCIES) $(EXTRA_check_virtualtable1_DEPENDENCIES) 
	@rm -f check_virtualtable1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualtable1_OBJECTS) $(check_virtualtable1_LDADD) $(LIBS)

check_virtualtable2$(EXEEXT): $(check_virtualtable2_OBJECTS) $(check_virtualtable2_DEPENDENCIES) $(EXTRA_check_virtualtable2_DEPENDENCIES) 
	@rm -f check_virtualtable2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualtable2_OBJECTS) $(check_virtualtable2_LDADD) $(LIBS)

check_virtualtable3$(EXEEXT): $(check_virtualtable3_OBJECTS) $(check_virtualtable3_DEPENDENCIES) $(EXTRA_check_virtualtable3_DEPENDENCIES) 
	@rm -f check_virtualtable3$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualtable3_OBJECTS) $(check_virtualtable3_LDADD) $(LIBS)

check_virtualtable4$(EXEEXT): $(check_virtualtable4_OBJECTS) $(check_virtualtable4_DEPENDENCIES) $(EXTRA_check_virtualtable4_DEPENDENCIES) 
	@rm -f check_virtualtable4$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualtable4_OBJECTS) $(check_virtualtable4_LDADD) $(LIBS)

check_virtualtable5$(EXEEXT): $(check_virtualtable5_OBJECTS) $(check_virtualtable5_DEPENDENCIES) $(EXTRA_check_virtualtable5_DEPENDENCIES) 
	@rm -f check_virtualtable5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualtable5_OBJECTS) $(check_virtualtable5_LDADD) $(LIBS)

check_virtualtable6$(EXEEXT): $(check_virtualtable6_OBJECTS) $(check_virtualtable6_DEPENDENCIES) $(EXTRA_check_virtualtable6_DEPENDENCIES) 
	@rm -f check_virtualtable6$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualtable6_OBJECTS) $(check_virtualtable6_LDADD) $(LIBS)

check_virtualxpath$(EXEEXT): $(check_virtualxpath_OBJECTS) $(check_virtualxpath_DEPENDENCIES) $(EXTRA_check_virtualxpath_DEPENDENCIES) 
	@rm -f check_virtualxpath$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_virtualxpath_OBJECTS) $(check_virtualxpath_LDADD) $(LIBS)

check_wfsin$(EXEEXT): $(check_wfsin_OBJECTS) $(check_wfsin_DEPENDENCIES) $(EXTRA_check_wfsin_DEPENDENCIES) 
	@rm -f check_wfsin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_wfsin_OBJECTS) $(check_wfsin_LDADD) $(LIBS)

check_xls_load$(EXEEXT): $(check_xls_load_OBJECTS) $(check_xls_load_DEPENDENCIES) $(EXTRA_check_xls_load_DEPENDENCIES) 
	@rm -f check_xls_load$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_xls_load_OBJECTS) $(check_xls_load_LDADD) $(LIBS)

shape_3d$(EXEEXT): $(shape_3d_OBJECTS) $(shape_3d_DEPENDENCIES) $(EXTRA_shape_3d_DEPENDENCIES) 
	@rm -f shape_3d$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_3d_OBJECTS) $(shape_3d_LDADD) $(LIBS)

shape_cp1252$(EXEEXT): $(shape_cp1252_OBJECTS) $(shape_cp1252_DEPENDENCIES) $(EXTRA_shape_cp1252_DEPENDENCIES) 
	@rm -f shape_cp1252$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_cp1252_OBJECTS) $(shape_cp1252_LDADD) $(LIBS)

shape_primitives$(EXEEXT): $(shape_primitives_OBJECTS) $(shape_primitives_DEPENDENCIES) $(EXTRA_shape_primitives_DEPENDENCIES) 
	@rm -f shape_primitives$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_primitives_OBJECTS) $(shape_primitives_LDADD) $(LIBS)

shape_utf8_1$(EXEEXT): $(shape_utf8_1_OBJECTS) $(shape_utf8_1_DEPENDENCIES) $(EXTRA_shape_utf8_1_DEPENDENCIES) 
	@rm -f shape_utf8_1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_utf8_1_OBJECTS) $(shape_utf8_1_LDADD) $(LIBS)

shape_utf8_1ex$(EXEEXT): $(shape_utf8_1ex_OBJECTS) $(shape_utf8_1ex_DEPENDENCIES) $(EXTRA_shape_utf8_1ex_DEPENDENCIES) 
	@rm -f shape_utf8_1ex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_utf8_1ex_OBJECTS) $(shape_utf8_1ex_LDADD) $(LIBS)

shape_utf8_2$(EXEEXT): $(shape_utf8_2_OBJECTS) $(shape_utf8_2_DEPENDENCIES) $(EXTRA_shape_utf8_2_DEPENDENCIES) 
	@rm -f shape_utf8_2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shape_utf8_2_OBJECTS) $(shape_utf8_2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_add_tile_triggers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_add_tile_triggers_bad_table_name.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_bufovflw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_create.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_createBaseTables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_dbf_load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_dxf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_endian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_exif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_exif2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_extension.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_extra_relations_fncts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_fdo1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_fdo2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_fdo3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_fdo_bufovflw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gaia_utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gaia_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_geom_aux.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_geometry_cols.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_geoscvt_fncts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_row.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_row_bad_geopackage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_row_bad_geopackage2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_zoom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_zoom_bad_geopackage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_zoom_bad_geopackage2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_get_normal_zoom_extension_load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgConvert.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgCreateFeaturesTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgCreateTilesTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgCreateTilesTableMissingSRID.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgCreateTilesZoomLevel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgGetImageFormat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgGetImageFormat_nonblob.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgGetImageFormat_nonimage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgGetImageFormat_png.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgGetImageFormat_tiff.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgGetImageFormat_webp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgInsertEpsgSRID.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkgVirtual.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkg_base_core_container_data_file_format_application_id.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkg_base_core_contents_data_table_def.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkg_base_core_spatial_ref_sys_data_table_def.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkg_base_core_spatial_ref_sys_data_values_default.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_gpkg_opt_extension_mechanism_extensions_data_table_def.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_init2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_libxml2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_math_funcs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_mbrcache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_md5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_metacatalog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_multithread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_recover_geom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_relations_fncts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_shp_load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_shp_load_3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_spatialindex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_sql_stmt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_styling.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtual_ovflw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualbbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualtable1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualtable2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualtable3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualtable4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualtable5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualtable6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_virtualxpath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_wfsin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_xls_load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_3d.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_cp1252.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_primitives.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_utf8_1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_utf8_1ex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shape_utf8_2.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
check_endian.log: check_endian$(EXEEXT)
	@p='check_endian$(EXEEXT)'; \
	b='check_endian'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_version.log: check_version$(EXEEXT)
	@p='check_version$(EXEEXT)'; \
	b='check_version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_init.log: check_init$(EXEEXT)
	@p='check_init$(EXEEXT)'; \
	b='check_init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_init2.log: check_init2$(EXEEXT)
	@p='check_init2$(EXEEXT)'; \
	b='check_init2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_geom_aux.log: check_geom_aux$(EXEEXT)
	@p='check_geom_aux$(EXEEXT)'; \
	b='check_geom_aux'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_geometry_cols.log: check_geometry_cols$(EXEEXT)
	@p='check_geometry_cols$(EXEEXT)'; \
	b='check_geometry_cols'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_create.log: check_create$(EXEEXT)
	@p='check_create$(EXEEXT)'; \
	b='check_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_bufovflw.log: check_bufovflw$(EXEEXT)
	@p='check_bufovflw$(EXEEXT)'; \
	b='check_bufovflw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_fdo1.log: check_fdo1$(EXEEXT)
	@p='check_fdo1$(EXEEXT)'; \
	b='check_fdo1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_fdo2.log: check_fdo2$(EXEEXT)
	@p='check_fdo2$(EXEEXT)'; \
	b='check_fdo2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_fdo3.log: check_fdo3$(EXEEXT)
	@p='check_fdo3$(EXEEXT)'; \
	b='check_fdo3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_fdo_bufovflw.log: check_fdo_bufovflw$(EXEEXT)
	@p='check_fdo_bufovflw$(EXEEXT)'; \
	b='check_fdo_bufovflw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_md5.log: check_md5$(EXEEXT)
	@p='check_md5$(EXEEXT)'; \
	b='check_md5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dbf_load.log: check_dbf_load$(EXEEXT)
	@p='check_dbf_load$(EXEEXT)'; \
	b='check_dbf_load'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_shp_load.log: check_shp_load$(EXEEXT)
	@p='check_shp_load$(EXEEXT)'; \
	b='check_shp_load'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_shp_load_3d.log: check_shp_load_3d$(EXEEXT)
	@p='check_shp_load_3d$(EXEEXT)'; \
	b='check_shp_load_3d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape_cp1252.log: shape_cp1252$(EXEEXT)
	@p='shape_cp1252$(EXEEXT)'; \
	b='shape_cp1252'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape_primitives.log: shape_primitives$(EXEEXT)
	@p='shape_primitives$(EXEEXT)'; \
	b='shape_primitives'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape_utf8_1.log: shape_utf8_1$(EXEEXT)
	@p='shape_utf8_1$(EXEEXT)'; \
	b='shape_utf8_1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape_utf8_1ex.log: shape_utf8_1ex$(EXEEXT)
	@p='shape_utf8_1ex$(EXEEXT)'; \
	b='shape_utf8_1ex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape_utf8_2.log: shape_utf8_2$(EXEEXT)
	@p='shape_utf8_2$(EXEEXT)'; \
	b='shape_utf8_2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shape_3d.log: shape_3d$(EXEEXT)
	@p='shape_3d$(EXEEXT)'; \
	b='shape_3d'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_xls_load.log: check_xls_load$(EXEEXT)
	@p='check_xls_load$(EXEEXT)'; \
	b='check_xls_load'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_math_funcs.log: check_math_funcs$(EXEEXT)
	@p='check_math_funcs$(EXEEXT)'; \
	b='check_math_funcs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gaia_util.log: check_gaia_util$(EXEEXT)
	@p='check_gaia_util$(EXEEXT)'; \
	b='check_gaia_util'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gaia_utf8.log: check_gaia_utf8$(EXEEXT)
	@p='check_gaia_utf8$(EXEEXT)'; \
	b='check_gaia_utf8'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_extension.log: check_extension$(EXEEXT)
	@p='check_extension$(EXEEXT)'; \
	b='check_extension'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_recover_geom.log: check_recover_geom$(EXEEXT)
	@p='check_recover_geom$(EXEEXT)'; \
	b='check_recover_geom'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_sql_stmt.log: check_sql_stmt$(EXEEXT)
	@p='check_sql_stmt$(EXEEXT)'; \
	b='check_sql_stmt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_multithread.log: check_multithread$(EXEEXT)
	@p='check_multithread$(EXEEXT)'; \
	b='check_multithread'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualtable1.log: check_virtualtable1$(EXEEXT)
	@p='check_virtualtable1$(EXEEXT)'; \
	b='check_virtualtable1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualtable2.log: check_virtualtable2$(EXEEXT)
	@p='check_virtualtable2$(EXEEXT)'; \
	b='check_virtualtable2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualtable3.log: check_virtualtable3$(EXEEXT)
	@p='check_virtualtable3$(EXEEXT)'; \
	b='check_virtualtable3'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualtable4.log: check_virtualtable4$(EXEEXT)
	@p='check_virtualtable4$(EXEEXT)'; \
	b='check_virtualtable4'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualtable5.log: check_virtualtable5$(EXEEXT)
	@p='check_virtualtable5$(EXEEXT)'; \
	b='check_virtualtable5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualtable6.log: check_virtualtable6$(EXEEXT)
	@p='check_virtualtable6$(EXEEXT)'; \
	b='check_virtualtable6'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtual_ovflw.log: check_virtual_ovflw$(EXEEXT)
	@p='check_virtual_ovflw$(EXEEXT)'; \
	b='check_virtual_ovflw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_mbrcache.log: check_mbrcache$(EXEEXT)
	@p='check_mbrcache$(EXEEXT)'; \
	b='check_mbrcache'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_spatialindex.log: check_spatialindex$(EXEEXT)
	@p='check_spatialindex$(EXEEXT)'; \
	b='check_spatialindex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_exif.log: check_exif$(EXEEXT)
	@p='check_exif$(EXEEXT)'; \
	b='check_exif'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_exif2.log: check_exif2$(EXEEXT)
	@p='check_exif2$(EXEEXT)'; \
	b='check_exif2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_relations_fncts.log: check_relations_fncts$(EXEEXT)
	@p='check_relations_fncts$(EXEEXT)'; \
	b='check_relations_fncts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_extra_relations_fncts.log: check_extra_relations_fncts$(EXEEXT)
	@p='check_extra_relations_fncts$(EXEEXT)'; \
	b='check_extra_relations_fncts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_geoscvt_fncts.log: check_geoscvt_fncts$(EXEEXT)
	@p='check_geoscvt_fncts$(EXEEXT)'; \
	b='check_geoscvt_fncts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_libxml2.log: check_libxml2$(EXEEXT)
	@p='check_libxml2$(EXEEXT)'; \
	b='check_libxml2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_styling.log: check_styling$(EXEEXT)
	@p='check_styling$(EXEEXT)'; \
	b='check_styling'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualxpath.log: check_virtualxpath$(EXEEXT)
	@p='check_virtualxpath$(EXEEXT)'; \
	b='check_virtualxpath'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_virtualbbox.log: check_virtualbbox$(EXEEXT)
	@p='check_virtualbbox$(EXEEXT)'; \
	b='check_virtualbbox'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_wfsin.log: check_wfsin$(EXEEXT)
	@p='check_wfsin$(EXEEXT)'; \
	b='check_wfsin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dxf.log: check_dxf$(EXEEXT)
	@p='check_dxf$(EXEEXT)'; \
	b='check_dxf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_metacatalog.log: check_metacatalog$(EXEEXT)
	@p='check_metacatalog$(EXEEXT)'; \
	b='check_metacatalog'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_createBaseTables.log: check_createBaseTables$(EXEEXT)
	@p='check_createBaseTables$(EXEEXT)'; \
	b='check_createBaseTables'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgCreateTilesTable.log: check_gpkgCreateTilesTable$(EXEEXT)
	@p='check_gpkgCreateTilesTable$(EXEEXT)'; \
	b='check_gpkgCreateTilesTable'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgCreateTilesTableMissingSRID.log: check_gpkgCreateTilesTableMissingSRID$(EXEEXT)
	@p='check_gpkgCreateTilesTableMissingSRID$(EXEEXT)'; \
	b='check_gpkgCreateTilesTableMissingSRID'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgCreateTilesZoomLevel.log: check_gpkgCreateTilesZoomLevel$(EXEEXT)
	@p='check_gpkgCreateTilesZoomLevel$(EXEEXT)'; \
	b='check_gpkgCreateTilesZoomLevel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgInsertEpsgSRID.log: check_gpkgInsertEpsgSRID$(EXEEXT)
	@p='check_gpkgInsertEpsgSRID$(EXEEXT)'; \
	b='check_gpkgInsertEpsgSRID'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgCreateFeaturesTable.log: check_gpkgCreateFeaturesTable$(EXEEXT)
	@p='check_gpkgCreateFeaturesTable$(EXEEXT)'; \
	b='check_gpkgCreateFeaturesTable'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkg_base_core_container_data_file_format_application_id.log: check_gpkg_base_core_container_data_file_format_application_id$(EXEEXT)
	@p='check_gpkg_base_core_container_data_file_format_application_id$(EXEEXT)'; \
	b='check_gpkg_base_core_container_data_file_format_application_id'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkg_base_core_spatial_ref_sys_data_table_def.log: check_gpkg_base_core_spatial_ref_sys_data_table_def$(EXEEXT)
	@p='check_gpkg_base_core_spatial_ref_sys_data_table_def$(EXEEXT)'; \
	b='check_gpkg_base_core_spatial_ref_sys_data_table_def'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkg_base_core_spatial_ref_sys_data_values_default.log: check_gpkg_base_core_spatial_ref_sys_data_values_default$(EXEEXT)
	@p='check_gpkg_base_core_spatial_ref_sys_data_values_default$(EXEEXT)'; \
	b='check_gpkg_base_core_spatial_ref_sys_data_values_default'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkg_base_core_contents_data_table_def.log: check_gpkg_base_core_contents_data_table_def$(EXEEXT)
	@p='check_gpkg_base_core_contents_data_table_def$(EXEEXT)'; \
	b='check_gpkg_base_core_contents_data_table_def'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkg_opt_extension_mechanism_extensions_data_table_def.log: check_gpkg_opt_extension_mechanism_extensions_data_table_def$(EXEEXT)
	@p='check_gpkg_opt_extension_mechanism_extensions_data_table_def$(EXEEXT)'; \
	b='check_gpkg_opt_extension_mechanism_extensions_data_table_def'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_add_tile_triggers.log: check_add_tile_triggers$(EXEEXT)
	@p='check_add_tile_triggers$(EXEEXT)'; \
	b='check_add_tile_triggers'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_add_tile_triggers_bad_table_name.log: check_add_tile_triggers_bad_table_name$(EXEEXT)
	@p='check_add_tile_triggers_bad_table_name$(EXEEXT)'; \
	b='check_add_tile_triggers_bad_table_name'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_row.log: check_get_normal_row$(EXEEXT)
	@p='check_get_normal_row$(EXEEXT)'; \
	b='check_get_normal_row'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_row_bad_geopackage.log: check_get_normal_row_bad_geopackage$(EXEEXT)
	@p='check_get_normal_row_bad_geopackage$(EXEEXT)'; \
	b='check_get_normal_row_bad_geopackage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_row_bad_geopackage2.log: check_get_normal_row_bad_geopackage2$(EXEEXT)
	@p='check_get_normal_row_bad_geopackage2$(EXEEXT)'; \
	b='check_get_normal_row_bad_geopackage2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_zoom.log: check_get_normal_zoom$(EXEEXT)
	@p='check_get_normal_zoom$(EXEEXT)'; \
	b='check_get_normal_zoom'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_zoom_extension_load.log: check_get_normal_zoom_extension_load$(EXEEXT)
	@p='check_get_normal_zoom_extension_load$(EXEEXT)'; \
	b='check_get_normal_zoom_extension_load'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_zoom_bad_geopackage.log: check_get_normal_zoom_bad_geopackage$(EXEEXT)
	@p='check_get_normal_zoom_bad_geopackage$(EXEEXT)'; \
	b='check_get_normal_zoom_bad_geopackage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_get_normal_zoom_bad_geopackage2.log: check_get_normal_zoom_bad_geopackage2$(EXEEXT)
	@p='check_get_normal_zoom_bad_geopackage2$(EXEEXT)'; \
	b='check_get_normal_zoom_bad_geopackage2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgGetImageFormat.log: check_gpkgGetImageFormat$(EXEEXT)
	@p='check_gpkgGetImageFormat$(EXEEXT)'; \
	b='check_gpkgGetImageFormat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgGetImageFormat_nonimage.log: check_gpkgGetImageFormat_nonimage$(EXEEXT)
	@p='check_gpkgGetImageFormat_nonimage$(EXEEXT)'; \
	b='check_gpkgGetImageFormat_nonimage'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgGetImageFormat_nonblob.log: check_gpkgGetImageFormat_nonblob$(EXEEXT)
	@p='check_gpkgGetImageFormat_nonblob$(EXEEXT)'; \
	b='check_gpkgGetImageFormat_nonblob'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgGetImageFormat_png.log: check_gpkgGetImageFormat_png$(EXEEXT)
	@p='check_gpkgGetImageFormat_png$(EXEEXT)'; \
	b='check_gpkgGetImageFormat_png'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgGetImageFormat_tiff.log: check_gpkgGetImageFormat_tiff$(EXEEXT)
	@p='check_gpkgGetImageFormat_tiff$(EXEEXT)'; \
	b='check_gpkgGetImageFormat_tiff'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgGetImageFormat_webp.log: check_gpkgGetImageFormat_webp$(EXEEXT)
	@p='check_gpkgGetImageFormat_webp$(EXEEXT)'; \
	b='check_gpkgGetImageFormat_webp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgConvert.log: check_gpkgConvert$(EXEEXT)
	@p='check_gpkgConvert$(EXEEXT)'; \
	b='check_gpkgConvert'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_gpkgVirtual.log: check_gpkgVirtual$(EXEEXT)
	@p='check_gpkgVirtual$(EXEEXT)'; \
	b='check_gpkgVirtual'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
